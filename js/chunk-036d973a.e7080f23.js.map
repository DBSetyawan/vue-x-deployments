{"version":3,"sources":["webpack:///./src/utils/crud/mixins/crud-instance.js","webpack:///./src/utils/crud/components/CrudTreeClientMode.vue?d169","webpack:///src/utils/crud/components/CrudTreeClientMode.vue","webpack:///./src/utils/crud/components/CrudTreeClientMode.vue?89c8","webpack:///./node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js","webpack:///./node_modules/vuetify/lib/components/VTreeview/util/filterTreeItems.js","webpack:///./node_modules/vuetify/lib/components/VTreeview/VTreeview.js","webpack:///./src/utils/crud/components/CrudTreeClientMode.vue?088c","webpack:///./src/utils/crud/components/CrudTreeClientMode.vue?9499"],"names":["props","selected","computed","this","map","item","meta","id","itemsList","tableFields","primaryKey","customButtons","activeColumnName","$t","page","methods","runItemsViewRefreshing","beforeGetItem","getItem","then","editItemDialog","resetItem","createItemDialog","obj","updateItem","confirm","deleteItem","length","openAlertBox","setSelectedIds","multipleEditDialog","checkSelected","mulitipleItemsUpdate","ids","selectedIds","request","active","mulitipleItemsDelete","name","index","getItemIndex","$parent","custom","itemElements","setItemElementsInfo","getItemElements","render","_vm","_h","$createElement","_c","_self","attrs","createMode","editMode","deleteMode","selectManyMode","updateManyMode","removeManyMode","mainFilter","fieldFilters","refreshButton","exportButton","excelLoading","search","selectedStatuses","columnFilters","on","create","editSelected","suspendSelected","restoreSelected","destroySelected","refreshItemsView","updateColumnFilterMode","updateColumnFilterValue","updateSearch","updateSelectedStatuses","clearFilters","exportToExcel","slot","$event","insertItem","unassignedItemParent","cancelMovingItem","_e","staticClass","treeItems","searchIterationNumber","filter","scopedSlots","_u","key","fn","ref","_v","_s","createChildNode","editButton","edit","suspend","restore","destroy","editItemElements","movingItemStarted","isInsertAllowed","moveItem","_l","field","label","_t","value","textMode","model","callback","$$v","expression","staticRenderFns","mixins","components","Controls","CrudButton","itemsDisabledForInsert","movedItemId","undefined","itemsViewConfig","parentColumnName","otherItems","items","addChildrenToItem","children","child","parentId","childId","computedChild","computeFields","text","fields","push","computedItems","isTestPassed","includes","parseInt","phrases","toLowerCase","split","phrase","fieldValue","String","toString","indexOf","colName","mode","tmpList","addItemsDisabledForInsert","node","initialItem","setItem","resetItems","getItems","testItems","watch","val","baseMixins","VTreeviewNodeProps","activatable","Boolean","activeClass","type","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","inject","treeview","Object","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","leaf","indeterminate","open","register","unregister","Promise","resolve","updateOpen","emitOpen","$scopedSlots","scopedProps","prepend","genLabel","append","VIcon","class","click","e","disabled","stopPropagation","checkChildren","$nextTick","updateSelected","emitSelected","computedIcon","genContent","unshift","genCheckbox","hasChildren","genToggle","setTextColor","updateActive","emitActive","VTreeviewNode","genChild","genChildrenWrapper","h","genNode","genTransition","isExcluded","filterTreeItem","textKey","toLocaleLowerCase","filterTreeItems","idKey","childrenKey","excluded","match","i","add","extend","Array","dense","hoverable","multipleActive","openAll","returnObject","selectionType","validator","v","activeCache","Set","nodes","openCache","selectedCache","oldKeys","keys","k","newKeys","getKeys","diff","forEach","oldSelectedCache","buildTree","deep","handleNodeCacheWatcher","$slots","console","updateAll","parent","oldNode","hasOwnProperty","vnode","c","calculateState","updateVnodeState","state","counts","reduce","emitNodeCache","event","cache","$emit","updateFn","emitFn","old","descendants","getDescendants","parents","delete","changed","Map","descendant","set","getParents","entries","isParent","excludedItems","has","options","bind","themeClasses","component","VCol","VRow","VTreeview"],"mappings":"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","file":"js/chunk-036d973a.e7080f23.js","sourcesContent":["import {\n  mapState,\n  mapGetters,\n  mapMutations,\n  mapActions,\n} from 'vuex'\n\nexport default {\n  props: [\n    'itemsViewConfig',\n    'tableFields',\n    'deleteMode',\n    'customButtons',\n    'itemElements',\n    'editButton',\n    'meta',\n    'primaryKey',\n    'activeColumnName',\n    'createMode',\n    'editMode',\n    'mainFilter',\n    'fieldFilters',\n    'exportButton',\n    'refreshButton',\n    'selectManyMode',\n    'updateManyMode',\n    'removeManyMode',\n  ],\n  data () {\n    return {\n      selected: [],\n    }\n  },\n  computed: {\n    ...mapState('app', ['page']),\n    ...mapState('crud', [\n      'prefix',\n      'path',\n      'currentItemIndex',\n      'currentItemId',\n    ]),\n    ...mapGetters('crud', ['itemsList']),\n    selectedIds () {\n      return this.selected.map(item => item.meta.id)\n    },\n    items () {\n      return this.itemsList(\n        this.tableFields,\n        this.meta,\n        this.primaryKey,\n        this.customButtons,\n        this.activeColumnName\n      )\n    },\n    excelName () {\n      return this.$t(`global.routes.${this.page}`)\n    },\n  },\n  methods: {\n    ...mapMutations('crud', [\n      'showItemDetailsDialog',\n      'setCurrentItem',\n      'resetItems',\n      'resetItem',\n      'editItemDialog',\n      'createItemDialog',\n      'multipleEditDialog',\n      'setItemElementsInfo',\n      'editItemElementsDialog',\n      'setSelectedIds',\n    ]),\n    ...mapActions('crud', [\n      'getItem',\n      'updateItem',\n      'storeItem',\n      'deleteItem',\n      'getItemElements',\n      'mulitipleItemsUpdate',\n      'mulitipleItemsDelete',\n      'getItemDetails',\n      'runItemsViewRefreshing',\n    ]),\n    ...mapActions(['openAlertBox']),\n    refreshItemsView () {\n      this.runItemsViewRefreshing()\n    },\n    edit (id) {\n      this.beforeGetItem(id)\n      this.getItem([id]).then(() => {\n        this.editItemDialog(id)\n      })\n    },\n    create () {\n      this.resetItem()\n      this.createItemDialog()\n    },\n    suspend (id) {\n      const obj = {}\n      obj[this.activeColumnName] = 0\n      this.updateItem([\n        id,\n        obj,\n        this.$t('global.alerts.suspended'),\n        this.$t('global.alerts.suspendError'),\n      ])\n    },\n    restore (id) {\n      const obj = {}\n      obj[this.activeColumnName] = 1\n      this.updateItem([\n        id,\n        obj,\n        this.$t('global.alerts.restored'),\n        this.$t('global.alerts.restoreError'),\n      ])\n    },\n    destroy (id) {\n      if (confirm(this.$t('global.alerts.confirm'))) {\n        this.deleteItem([\n          id,\n          this.$t('global.alerts.deleted'),\n          this.$t('global.alerts.deleteError'),\n        ])\n      }\n    },\n    checkSelected () {\n      if (this.selected.length === 0) {\n        this.openAlertBox([\n          'alertError',\n          this.$t('global.datatable.noItemsSelected'),\n        ])\n        return false\n      }\n      if (confirm(this.$t('global.datatable.confirm'))) {\n        return true\n      }\n      return false\n    },\n    editSelected () {\n      if (this.selected.length === 0) {\n        this.openAlertBox([\n          'alertError',\n          this.$t('global.datatable.noItemsSelected'),\n        ])\n        return false\n      }\n\n      this.setSelectedIds(this.selected)\n      this.resetItem()\n      this.multipleEditDialog()\n    },\n    suspendSelected () {\n      if (this.checkSelected()) {\n        this.mulitipleItemsUpdate([\n          {\n            ids: this.selectedIds,\n            request: {\n              active: 0,\n            },\n          },\n          this.$t('global.alerts.suspended'),\n          this.$t('global.alerts.suspendError'),\n        ])\n      }\n    },\n    restoreSelected () {\n      if (this.checkSelected()) {\n        this.mulitipleItemsUpdate([\n          {\n            ids: this.selectedIds,\n            request: {\n              active: 1,\n            },\n          },\n          this.$t('global.alerts.restored'),\n          this.$t('global.alerts.restoreError'),\n        ])\n      }\n    },\n    destroySelected () {\n      if (this.checkSelected()) {\n        this.mulitipleItemsDelete([\n          {\n            ids: this.selectedIds,\n          },\n          this.$t('global.alerts.deleted'),\n          this.$t('global.alerts.deleteError'),\n        ])\n      }\n    },\n    custom (name, item) {\n      const index = this.getItemIndex(item.meta.id)\n      this.$parent.custom(name, item, index)\n    },\n    editItemElements (name, id) {\n      const obj = this.itemElements[name]\n      this.setItemElementsInfo([\n        id,\n        obj,\n      ])\n      this.getItemElements()\n    },\n  },\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('controls',{attrs:{\"create-mode\":_vm.createMode,\"edit-mode\":_vm.editMode,\"delete-mode\":_vm.deleteMode,\"select-many-mode\":_vm.selectManyMode,\"update-many-mode\":_vm.updateManyMode,\"remove-many-mode\":_vm.removeManyMode,\"main-filter\":_vm.mainFilter,\"field-filters\":_vm.fieldFilters,\"refresh-button\":_vm.refreshButton,\"export-button\":_vm.exportButton,\"excel-loading\":_vm.excelLoading,\"initialSearch\":_vm.search,\"initialSelectedStatuses\":_vm.selectedStatuses,\"initialColumnFilters\":_vm.columnFilters},on:{\"create\":_vm.create,\"editSelected\":_vm.editSelected,\"suspendSelected\":_vm.suspendSelected,\"restoreSelected\":_vm.restoreSelected,\"destroySelected\":_vm.destroySelected,\"refreshItemsView\":_vm.refreshItemsView,\"updateColumnFilterMode\":_vm.updateColumnFilterMode,\"updateColumnFilterValue\":_vm.updateColumnFilterValue,\"updateSearch\":_vm.updateSearch,\"updateSelectedStatuses\":_vm.updateSelectedStatuses,\"clearFilters\":_vm.clearFilters,\"exportToExcel\":_vm.exportToExcel}},[_c('template',{slot:\"left\"},[(_vm.movingItemStarted)?[_c('crud-button',{attrs:{\"small\":\"\",\"color\":\"pink darken-4\",\"icon\":\"play_for_work\",\"tooltip\":_vm.$t('global.datatable.buttons.insertUnassigned')},on:{\"clicked\":function($event){return _vm.insertItem(_vm.unassignedItemParent)}}}),(_vm.movingItemStarted)?_c('crud-button',{attrs:{\"color\":\"pink darken-4\",\"icon\":\"cancel\",\"tooltip\":_vm.$t('global.datatable.buttons.cancelMove')},on:{\"clicked\":function($event){return _vm.cancelMovingItem()}}}):_vm._e()]:_vm._e()],2)],2),_c('v-treeview',{staticClass:\"tree\",attrs:{\"selectable\":_vm.selectManyMode,\"items\":_vm.treeItems,\"search\":_vm.searchIterationNumber,\"filter\":_vm.filter,\"color\":\"default\",\"item-key\":\"meta.id\",\"selection-type\":\"independent\",\"hoverable\":\"\",\"dense\":\"\",\"transition\":\"\",\"return-object\":\"\"},scopedSlots:_vm._u([{key:\"label\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('div',{staticClass:\"tree-item\"},[_c('v-row',{staticClass:\"tree-item__field\",attrs:{\"dense\":\"\"}},[_c('v-col',{staticClass:\"tree-item__field-label\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('global.datatable.fields.action'))+\"\\n          \")]),_c('v-col',[_c('span',{staticClass:\"tree-item__field-value\"},[(_vm.createMode)?_c('crud-button',{attrs:{\"small\":\"\",\"color\":\"light-blue lighten-2\",\"icon\":\"add\",\"tooltip\":_vm.$t('global.datatable.add')},on:{\"clicked\":function($event){return _vm.createChildNode(item.meta.id)}}}):_vm._e(),_c('list-item-actions',{attrs:{\"item\":item,\"edit-button\":_vm.editButton,\"custom-buttons\":_vm.customButtons,\"delete-mode\":_vm.deleteMode,\"item-elements\":_vm.itemElements,\"edit-mode\":_vm.editMode,\"select-many-mode\":_vm.selectManyMode},on:{\"edit\":_vm.edit,\"custom\":_vm.custom,\"suspend\":_vm.suspend,\"restore\":_vm.restore,\"destroy\":_vm.destroy,\"editItemElements\":_vm.editItemElements}}),(_vm.editMode)?[(!_vm.movingItemStarted)?_c('crud-button',{attrs:{\"small\":\"\",\"color\":\"pink darken-4\",\"icon\":\"swap_vert\",\"tooltip\":_vm.$t('global.datatable.buttons.move')},on:{\"clicked\":function($event){return _vm.moveItem(item)}}}):(_vm.isInsertAllowed(item))?_c('crud-button',{attrs:{\"small\":\"\",\"color\":\"pink darken-4\",\"icon\":\"play_for_work\",\"tooltip\":_vm.$t('global.datatable.buttons.insert')},on:{\"clicked\":function($event){return _vm.insertItem(item.meta.id)}}}):_vm._e()]:_vm._e()],2)])],1),_vm._l((item.fields),function(field,key){return _c('v-row',{key:key,staticClass:\"tree-item__field\",attrs:{\"dense\":\"\"}},[_c('v-col',{staticClass:\"tree-item__field-label\"},[_vm._v(\"\\n            \"+_vm._s(field.label)+\"\\n          \")]),_c('v-col',[_c('span',{staticClass:\"tree-item__field-value\"},[_vm._t((\"field:\" + (field.name)),[_c('list-item-field',{attrs:{\"value\":field.value,\"text-mode\":_vm.textMode(item, field.name)}})],{\"value\":field.value,\"item\":item})],2)])],1)})],2)]}}],null,true),model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <controls\n      :create-mode=\"createMode\"\n      :edit-mode=\"editMode\"\n      :delete-mode=\"deleteMode\"\n      :select-many-mode=\"selectManyMode\"\n      :update-many-mode=\"updateManyMode\"\n      :remove-many-mode=\"removeManyMode\"\n      :main-filter=\"mainFilter\"\n      :field-filters=\"fieldFilters\"\n      :refresh-button=\"refreshButton\"\n      :export-button=\"exportButton\"\n      :excel-loading=\"excelLoading\"\n      :initialSearch=\"search\"\n      :initialSelectedStatuses=\"selectedStatuses\"\n      :initialColumnFilters=\"columnFilters\"\n      @create=\"create\"\n      @editSelected=\"editSelected\"\n      @suspendSelected=\"suspendSelected\"\n      @restoreSelected=\"restoreSelected\"\n      @destroySelected=\"destroySelected\"\n      @refreshItemsView=\"refreshItemsView\"\n      @updateColumnFilterMode=\"updateColumnFilterMode\"\n      @updateColumnFilterValue=\"updateColumnFilterValue\"\n      @updateSearch=\"updateSearch\"\n      @updateSelectedStatuses=\"updateSelectedStatuses\"\n      @clearFilters=\"clearFilters\"\n      @exportToExcel=\"exportToExcel\"\n    >\n      <template slot=\"left\">\n        <template v-if=\"movingItemStarted\">\n          <crud-button\n            small\n            color=\"pink darken-4\"\n            icon=\"play_for_work\"\n            :tooltip=\"$t('global.datatable.buttons.insertUnassigned')\"\n            @clicked=\"insertItem(unassignedItemParent)\"\n          />\n          <crud-button\n            v-if=\"movingItemStarted\"\n            color=\"pink darken-4\"\n            icon=\"cancel\"\n            :tooltip=\"$t('global.datatable.buttons.cancelMove')\"\n            @clicked=\"cancelMovingItem()\"\n          />\n        </template>\n      </template>\n    </controls>\n    <!-- Tree -->\n    <v-treeview\n      v-model=\"selected\"\n      :selectable=\"selectManyMode\"\n      :items=\"treeItems\"\n      :search=\"searchIterationNumber\"\n      :filter=\"filter\"\n      class=\"tree\"\n      color=\"default\"\n      item-key=\"meta.id\"\n      selection-type=\"independent\"\n      hoverable\n      dense\n      transition\n      return-object\n    >\n      <template v-slot:label=\"{ item }\">\n        <div class=\"tree-item\">\n          <v-row\n            class=\"tree-item__field\"\n            dense\n          >\n            <v-col class=\"tree-item__field-label\">\n              {{ $t('global.datatable.fields.action') }}\n            </v-col>\n            <v-col>\n              <span class=\"tree-item__field-value\">\n                <crud-button\n                  v-if=\"createMode\"\n                  small\n                  color=\"light-blue lighten-2\"\n                  @clicked=\"createChildNode(item.meta.id)\"\n                  icon=\"add\"\n                  :tooltip=\"$t('global.datatable.add')\"\n                />\n                <list-item-actions\n                  :item=\"item\"\n                  :edit-button='editButton'\n                  :custom-buttons='customButtons'\n                  :delete-mode='deleteMode'\n                  :item-elements=\"itemElements\"\n                  :edit-mode=\"editMode\"\n                  :select-many-mode=\"selectManyMode\"\n                  @edit=\"edit\"\n                  @custom=\"custom\"\n                  @suspend=\"suspend\"\n                  @restore=\"restore\"\n                  @destroy=\"destroy\"\n                  @editItemElements=\"editItemElements\"\n                />\n                <template v-if=\"editMode\">\n                  <crud-button\n                    v-if=\"!movingItemStarted\"\n                    small\n                    color=\"pink darken-4\"\n                    icon=\"swap_vert\"\n                    :tooltip=\"$t('global.datatable.buttons.move')\"\n                    @clicked=\"moveItem(item)\"\n                  />\n                  <crud-button\n                    v-else-if=\"isInsertAllowed(item)\"\n                    small\n                    color=\"pink darken-4\"\n                    icon=\"play_for_work\"\n                    :tooltip=\"$t('global.datatable.buttons.insert')\"\n                    @clicked=\"insertItem(item.meta.id)\"\n                  />\n                </template>\n              </span>\n            </v-col>\n          </v-row>\n          <v-row\n            v-for=\"(field, key) in item.fields\"\n            :key=\"key\"\n            class=\"tree-item__field\"\n            dense\n          >\n            <v-col class=\"tree-item__field-label\">\n              {{ field.label }}\n            </v-col>\n            <v-col>\n              <span class=\"tree-item__field-value\">\n                <slot\n                  :name=\"`field:${field.name}`\"\n                  :value=\"field.value\"\n                  :item=\"item\"\n                >\n                  <list-item-field\n                    :value=\"field.value\"\n                    :text-mode=\"textMode(item, field.name)\"\n                  />\n                </slot>\n              </span>\n            </v-col>\n          </v-row>\n        </div>\n      </template>\n    </v-treeview>\n  </div>\n</template>\n\n<script>\n\nimport {\n  mapState,\n  mapMutations,\n  mapActions,\n} from 'vuex'\n\nimport CrudInstanceMixin from '../mixins/crud-instance'\nimport ControlsHandlerMixin from '../mixins/controls-handler'\nimport ItemsViewMixin from '../mixins/items-view'\n\nimport Controls from './Controls.vue'\nimport CrudButton from './Button.vue'\n\nexport default {\n  name: 'CrudTreeClientMode',\n  mixins: [\n    CrudInstanceMixin,\n    ControlsHandlerMixin,\n    ItemsViewMixin,\n  ],\n  components: {\n    Controls,\n    CrudButton,\n  },\n  data () {\n    return {\n      searchIterationNumber: '0',\n      movingItemStarted: false,\n      itemsDisabledForInsert: [],\n      movedItemId: undefined,\n    }\n  },\n  computed: {\n    ...mapState('crud', [\n      'loading',\n      'detailsDialog',\n      'isItemsViewRefreshed',\n    ]),\n    parentColumnName () {\n      return this.itemsViewConfig.parentColumnName || 'parent_id'\n    },\n    unassignedItemParent () {\n      return this.itemsViewConfig.unassignedItemParent || null\n    },\n    treeItems () {\n      const parentColumnName = this.parentColumnName\n      let otherItems = this.items\n      const addChildrenToItem = (id) => {\n        let children = []\n        for (const child of otherItems) {\n          const parentId = child.meta.item[parentColumnName]\n          if (id === parentId) {\n            const childId = child.meta.id\n            const computedChild = {}\n            const computeFields = (item) => {\n              return this.tableFields.map(field => {\n                return {\n                  name: field.name,\n                  label: field.text,\n                  value: item[field.name],\n                }\n              })\n            }\n            computedChild.fields = computeFields(child)\n            computedChild.meta = child.meta\n            computedChild.children = addChildrenToItem(childId)\n            children.push(computedChild)\n          }\n        }\n        return children\n      }\n      let computedItems = addChildrenToItem(this.unassignedItemParent)\n      return computedItems\n    },\n    filter () {\n      return (item) => {\n        let isTestPassed\n\n        // check if selected statuses contain item status\n        isTestPassed = [\n          'soft',\n          'both',\n        ].includes(this.deleteMode)\n          ? this.selectedStatuses.includes(parseInt(item.meta.active))\n          : true\n        if (!isTestPassed) return false\n\n        // check if item contain all search phrases\n        const phrases = this.search === '' ? [] : this.search.toLowerCase().split(' ')\n        for (const phrase of phrases) {\n          isTestPassed = false\n          for (const field of item.fields) {\n            let fieldValue = field.value\n            if (typeof fieldValue === 'string' || fieldValue instanceof String || typeof fieldValue === 'number') {\n              fieldValue = fieldValue.toString().toLowerCase()\n              if (fieldValue.indexOf(phrase) > -1) {\n                isTestPassed = true\n                break\n              }\n            }\n          }\n          if (!isTestPassed) return false\n        }\n\n        // check if item contain phrases from column filters\n        for (const filter of this.columnFilters) {\n          if (filter.value !== '') {\n            isTestPassed = false\n            const colName = filter.name\n            let field = item.meta.item[colName]\n            if (typeof field === 'string' || field instanceof String || typeof field === 'number') {\n              field = field.toString().toLowerCase()\n              switch (filter.mode) {\n                case 'like':\n                  if (field.includes(filter.value)) {\n                    isTestPassed = true\n                  }\n                  break\n                case 'equals':\n                  if (field === filter.value) {\n                    isTestPassed = true\n                  }\n                  break\n                case 'list':\n                  const tmpList = filter.value.split(';')\n                  if (tmpList.includes(field)) {\n                    isTestPassed = true\n                  }\n                  break\n                default:\n                  break\n              }\n            }\n            if (!isTestPassed) return false\n          }\n        }\n\n        return true\n      }\n    },\n  },\n  methods: {\n    ...mapActions('crud', ['getItems']),\n    ...mapMutations('crud', ['setItem']),\n    clearFilters () {},\n    exportToExcel () {},\n    startSearching () {\n      this.searchIterationNumber = parseInt(this.searchIterationNumber + 1).toString()\n    },\n    beforeGetItem (id) {},\n    moveItem (item) {\n      const addItemsDisabledForInsert = (node) => {\n        this.itemsDisabledForInsert.push(node.meta.id)\n        if (node.children) {\n          for (const child of node.children) {\n            addItemsDisabledForInsert(child)\n          }\n        }\n      }\n      this.itemsDisabledForInsert = []\n      addItemsDisabledForInsert(item)\n      this.movedItemId = item.meta.id\n      this.movingItemStarted = true\n    },\n    insertItem (id) {\n      this.movingItemStarted = false\n      const obj = {}\n      obj[this.parentColumnName] = id\n      this.updateItem([\n        this.movedItemId,\n        obj,\n        this.$t('global.alerts.updated'),\n        this.$t('global.alerts.updateError'),\n      ])\n    },\n    cancelMovingItem () {\n      this.movingItemStarted = false\n    },\n    isInsertAllowed (item) {\n      return !this.itemsDisabledForInsert.includes(item.meta.id)\n    },\n    createChildNode (id) {\n      this.resetItem()\n      const initialItem = {}\n      initialItem[this.parentColumnName] = id\n      this.setItem(initialItem)\n      this.createItemDialog()\n    },\n  },\n  created () {\n    this.resetItems()\n    this.getItems()\n    this.testItems = this.treeItems\n  },\n  watch: {\n    detailsDialog (val) {\n      if (!val) {\n        this.getItems()\n      }\n    },\n    isItemsViewRefreshed (val) {\n      if (val) {\n        this.getItems()\n      }\n    },\n  },\n}\n</script>\n<style lang=\"scss\" scoped>\n.tree {\n  max-width: 100%;\n  margin: 0 10px;\n}\n.tree-item {\n  padding-left: 10px;\n  &__field {\n    max-width: 800px;\n    &:not(:last-child) {\n      border-bottom: 1px dotted #ccc;\n    }\n  }\n  &__field-label {\n    font-weight: bold;\n  }\n  &__field-value {\n    float: right;\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrudTreeClientMode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrudTreeClientMode.vue?vue&type=script&lang=js&\"","// Components\nimport { VExpandTransition } from '../transitions';\nimport { VIcon } from '../VIcon';\nimport VTreeviewNode from './VTreeviewNode'; // Mixins\n\nimport { inject as RegistrableInject } from '../../mixins/registrable';\nimport Colorable from '../../mixins/colorable'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { getObjectValueByPath } from '../../util/helpers';\nconst baseMixins = mixins(Colorable, RegistrableInject('treeview'));\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active'\n  },\n  color: {\n    type: String,\n    default: 'primary'\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup'\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate'\n  },\n  itemChildren: {\n    type: String,\n    default: 'children'\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled'\n  },\n  itemKey: {\n    type: String,\n    default: 'id'\n  },\n  itemText: {\n    type: String,\n    default: 'name'\n  },\n  loadChildren: Function,\n  loadingIcon: {\n    type: String,\n    default: '$loading'\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff'\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn'\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent'\n  },\n  shaped: Boolean,\n  transition: Boolean\n};\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-treeview-node',\n  inject: {\n    treeview: {\n      default: null\n    }\n  },\n  props: {\n    item: {\n      type: Object,\n      default: () => null\n    },\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    hasLoaded: false,\n    isActive: false,\n    isIndeterminate: false,\n    isLoading: false,\n    isOpen: false,\n    isSelected: false\n  }),\n  computed: {\n    disabled() {\n      return getObjectValueByPath(this.item, this.itemDisabled);\n    },\n\n    key() {\n      return getObjectValueByPath(this.item, this.itemKey);\n    },\n\n    children() {\n      return getObjectValueByPath(this.item, this.itemChildren);\n    },\n\n    text() {\n      return getObjectValueByPath(this.item, this.itemText);\n    },\n\n    scopedProps() {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen\n      };\n    },\n\n    computedIcon() {\n      if (this.isIndeterminate) return this.indeterminateIcon;else if (this.isSelected) return this.onIcon;else return this.offIcon;\n    },\n\n    hasChildren() {\n      return !!this.children && (!!this.children.length || !!this.loadChildren);\n    }\n\n  },\n\n  created() {\n    this.treeview.register(this);\n  },\n\n  beforeDestroy() {\n    this.treeview.unregister(this);\n  },\n\n  methods: {\n    checkChildren() {\n      return new Promise(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve();\n        this.isLoading = true;\n        resolve(this.loadChildren(this.item));\n      }).then(() => {\n        this.isLoading = false;\n        this.hasLoaded = true;\n      });\n    },\n\n    open() {\n      this.isOpen = !this.isOpen;\n      this.treeview.updateOpen(this.key, this.isOpen);\n      this.treeview.emitOpen();\n    },\n\n    genLabel() {\n      const children = [];\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps));else children.push(this.text);\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label'\n      }, children);\n    },\n\n    genContent() {\n      const children = [this.$scopedSlots.prepend && this.$scopedSlots.prepend(this.scopedProps), this.genLabel(), this.$scopedSlots.append && this.$scopedSlots.append(this.scopedProps)];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content'\n      }, children);\n    },\n\n    genToggle() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading\n        },\n        slot: 'prepend',\n        on: {\n          click: e => {\n            if (this.disabled) return;\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => this.open());\n          }\n        }\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon]);\n    },\n\n    genCheckbox() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined\n        },\n        on: {\n          click: e => {\n            if (this.disabled) return;\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected;\n                this.isIndeterminate = false;\n                this.treeview.updateSelected(this.key, this.isSelected);\n                this.treeview.emitSelected();\n              });\n            });\n          }\n        }\n      }, [this.computedIcon]);\n    },\n\n    genNode() {\n      const children = [this.genContent()];\n      if (this.selectable) children.unshift(this.genCheckbox());\n      if (this.hasChildren) children.unshift(this.genToggle());\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return;\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open();\n            } else if (this.activatable) {\n              this.isActive = !this.isActive;\n              this.treeview.updateActive(this.key, this.isActive);\n              this.treeview.emitActive();\n            }\n          }\n        }\n      }), children);\n    },\n\n    genChild(item) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped\n        },\n        scopedSlots: this.$scopedSlots\n      });\n    },\n\n    genChildrenWrapper() {\n      if (!this.isOpen || !this.children) return null;\n      const children = [this.children.map(this.genChild)];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children'\n      }, children);\n    },\n\n    genTransition() {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()]);\n    }\n\n  },\n\n  render(h) {\n    const children = [this.genNode()];\n    if (this.transition) children.push(this.genTransition());else children.push(this.genChildrenWrapper());\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key)\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen)\n      }\n    }, children);\n  }\n\n});\n//# sourceMappingURL=VTreeviewNode.js.map","import { getObjectValueByPath } from '../../../util/helpers';\nexport function filterTreeItem(item, search, textKey) {\n  const text = getObjectValueByPath(item, textKey);\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1;\n}\nexport function filterTreeItems(filter, item, search, idKey, textKey, childrenKey, excluded) {\n  if (filter(item, search, textKey)) {\n    return true;\n  }\n\n  const children = getObjectValueByPath(item, childrenKey);\n\n  if (children) {\n    let match = false;\n\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true;\n      }\n    }\n\n    if (match) return true;\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey));\n  return false;\n}\n//# sourceMappingURL=filterTreeItems.js.map","// Styles\nimport \"../../../src/components/VTreeview/VTreeview.sass\"; // Components\n\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport { provide as RegistrableProvide } from '../../mixins/registrable'; // Utils\n\nimport { arrayDiff, deepEqual, getObjectValueByPath } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nimport { filterTreeItems, filterTreeItem } from './util/filterTreeItems';\nexport default mixins(RegistrableProvide('treeview'), Themeable\n/* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide() {\n    return {\n      treeview: this\n    };\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => []\n    },\n    dense: Boolean,\n    filter: Function,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => []\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false\n    },\n    search: String,\n    selectionType: {\n      type: String,\n      default: 'leaf',\n      validator: v => ['leaf', 'independent'].includes(v)\n    },\n    value: {\n      type: Array,\n      default: () => []\n    },\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    activeCache: new Set(),\n    nodes: {},\n    openCache: new Set(),\n    selectedCache: new Set()\n  }),\n  computed: {\n    excludedItems() {\n      const excluded = new Set();\n      if (!this.search) return excluded;\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(this.filter || filterTreeItem, this.items[i], this.search, this.itemKey, this.itemText, this.itemChildren, excluded);\n      }\n\n      return excluded;\n    }\n\n  },\n  watch: {\n    items: {\n      handler() {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey));\n        const newKeys = this.getKeys(this.items);\n        const diff = arrayDiff(newKeys, oldKeys); // We only want to do stuff if items have changed\n\n        if (!diff.length && newKeys.length < oldKeys.length) return; // If nodes are removed we need to clear them from this.nodes\n\n        diff.forEach(k => delete this.nodes[k]);\n        const oldSelectedCache = [...this.selectedCache];\n        this.selectedCache = new Set();\n        this.activeCache = new Set();\n        this.openCache = new Set();\n        this.buildTree(this.items); // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected();\n      },\n\n      deep: true\n    },\n\n    active(value) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive);\n    },\n\n    value(value) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected);\n    },\n\n    open(value) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen);\n    }\n\n  },\n\n  created() {\n    this.buildTree(this.items);\n    this.value.forEach(key => this.updateSelected(key, true));\n    this.active.forEach(key => this.updateActive(key, true));\n  },\n\n  mounted() {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this);\n    }\n\n    if (this.openAll) {\n      this.updateAll(true);\n    } else {\n      this.open.forEach(key => this.updateOpen(key, true));\n      this.emitOpen();\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll(value) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value));\n      this.emitOpen();\n    },\n\n    getKeys(items, keys = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey);\n        keys.push(key);\n        const children = getObjectValueByPath(items[i], this.itemChildren);\n\n        if (children) {\n          keys.push(...this.getKeys(children));\n        }\n      }\n\n      return keys;\n    },\n\n    buildTree(items, parent = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const key = getObjectValueByPath(item, this.itemKey);\n        const children = getObjectValueByPath(item, this.itemChildren, []);\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false,\n          isIndeterminate: false,\n          isActive: false,\n          isOpen: false,\n          vnode: null\n        };\n        const node = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map(c => getObjectValueByPath(c, this.itemKey)),\n          item\n        };\n        this.buildTree(children, key); // This fixed bug with dynamic children resetting selected parent state\n\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected;\n          node.isIndeterminate = this.nodes[parent].isIndeterminate;\n        } else {\n          node.isSelected = oldNode.isSelected;\n          node.isIndeterminate = oldNode.isIndeterminate;\n        }\n\n        node.isActive = oldNode.isActive;\n        node.isOpen = oldNode.isOpen;\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes); // Don't forget to rebuild cache\n\n        if (this.nodes[key].isSelected) this.selectedCache.add(key);\n        if (this.nodes[key].isActive) this.activeCache.add(key);\n        if (this.nodes[key].isOpen) this.openCache.add(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    calculateState(node, state) {\n      const counts = node.children.reduce((counts, child) => {\n        counts[0] += +Boolean(state[child].isSelected);\n        counts[1] += +Boolean(state[child].isIndeterminate);\n        return counts;\n      }, [0, 0]);\n      node.isSelected = !!node.children.length && counts[0] === node.children.length;\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0);\n      return node;\n    },\n\n    emitOpen() {\n      this.emitNodeCache('update:open', this.openCache);\n    },\n\n    emitSelected() {\n      this.emitNodeCache('input', this.selectedCache);\n    },\n\n    emitActive() {\n      this.emitNodeCache('update:active', this.activeCache);\n    },\n\n    emitNodeCache(event, cache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache]);\n    },\n\n    handleNodeCacheWatcher(value, cache, updateFn, emitFn) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value;\n      const old = [...cache];\n      if (deepEqual(old, value)) return;\n      old.forEach(key => updateFn(key, false));\n      value.forEach(key => updateFn(key, true));\n      emitFn();\n    },\n\n    getDescendants(key, descendants = []) {\n      const children = this.nodes[key].children;\n      descendants.push(...children);\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants);\n      }\n\n      return descendants;\n    },\n\n    getParents(key) {\n      let parent = this.nodes[key].parent;\n      const parents = [];\n\n      while (parent !== null) {\n        parents.push(parent);\n        parent = this.nodes[parent].parent;\n      }\n\n      return parents;\n    },\n\n    register(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      this.nodes[key].vnode = node;\n      this.updateVnodeState(key);\n    },\n\n    unregister(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      if (this.nodes[key]) this.nodes[key].vnode = null;\n    },\n\n    isParent(key) {\n      return this.nodes[key].children && this.nodes[key].children.length;\n    },\n\n    updateActive(key, isActive) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false;\n          this.updateVnodeState(active);\n          this.activeCache.delete(active);\n        });\n      }\n\n      const node = this.nodes[key];\n      if (!node) return;\n      if (isActive) this.activeCache.add(key);else this.activeCache.delete(key);\n      node.isActive = isActive;\n      this.updateVnodeState(key);\n    },\n\n    updateSelected(key, isSelected) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const changed = new Map();\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)];\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected;\n          this.nodes[descendant].isIndeterminate = false;\n          changed.set(descendant, isSelected);\n        });\n        const parents = this.getParents(key);\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes);\n          changed.set(parent, this.nodes[parent].isSelected);\n        });\n      } else {\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = false;\n        changed.set(key, isSelected);\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key);\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue;\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key);\n      }\n    },\n\n    updateOpen(key, isOpen) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const node = this.nodes[key];\n      const children = getObjectValueByPath(node.item, this.itemChildren);\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen));\n      } else if (children && children.length) {\n        node.isOpen = isOpen;\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    updateVnodeState(key) {\n      const node = this.nodes[key];\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected;\n        node.vnode.isIndeterminate = node.isIndeterminate;\n        node.vnode.isActive = node.isActive;\n        node.vnode.isOpen = node.isOpen;\n      }\n    },\n\n    isExcluded(key) {\n      return !!this.search && this.excludedItems.has(key);\n    }\n\n  },\n\n  render(h) {\n    const children = this.items.length ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n    /* istanbul ignore next */\n    : this.$slots.default; // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses\n      }\n    }, children);\n  }\n\n});\n//# sourceMappingURL=VTreeview.js.map","import { render, staticRenderFns } from \"./CrudTreeClientMode.vue?vue&type=template&id=27b28310&scoped=true&\"\nimport script from \"./CrudTreeClientMode.vue?vue&type=script&lang=js&\"\nexport * from \"./CrudTreeClientMode.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CrudTreeClientMode.vue?vue&type=style&index=0&id=27b28310&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"27b28310\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VCol,VRow,VTreeview})\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrudTreeClientMode.vue?vue&type=style&index=0&id=27b28310&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrudTreeClientMode.vue?vue&type=style&index=0&id=27b28310&lang=scss&scoped=true&\""],"sourceRoot":""}